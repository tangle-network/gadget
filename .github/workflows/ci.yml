name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: rust-validation-${{ github.head_ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full
  RUST_LOG: "gadget=trace"
  CARGO_TERM_COLOR: always
  IN_CI: "true"

jobs:
  formatting:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check Formatting
        run: cargo fmt -- --check

  linting:
    timeout-minutes: 120
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Verify Forge installation
        run: forge --version

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: install protobuf and gmp
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler libprotobuf-dev libgmp-dev

      - name: Run Clippy
        run: cargo clippy --tests --examples -- -D warnings

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate matrix for workspace crates
        id: set-matrix
        run: |
          matrix=$(cargo metadata --format-version 1 --no-deps | jq -c '[.packages[] | .name]')
          echo "Generated matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  test-incredible-squaring-tangle:
    timeout-minutes: 30
    name: Tangle incredible squaring
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Verify Forge installation
        run: forge --version

      - name: install rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: stable

      - uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: tests
        working-directory: examples/incredible-squaring/incredible-squaring-lib
        run: cargo nextest run

  testing:
    needs: generate-matrix
    timeout-minutes: 30
    name: cargo test
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Verify Forge installation
        run: forge --version

      - name: install rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: stable

      - uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Determine nextest profile
        run: |
          SERIAL_CRATES=("gadget-tangle-testing-utils" "gadget-client-evm" "blueprint-tangle-extra" "gadget-networking", "cargo-tangle")
          PROFILE=ci

          for crate in "${SERIAL_CRATES[@]}"; do
            if [[ "${{ matrix.package }}" == "$crate" ]]; then
              PROFILE=serial
              break
            fi
          done

          echo "cargo_nextest_args=--profile $PROFILE" >> $GITHUB_ENV

      # TODO: nextest doesn't support doc tests yet (https://github.com/nextest-rs/nextest/issues/16)
      - name: tests
        run: cargo nextest run --no-tests pass --package ${{ matrix.package }} ${{ env.cargo_nextest_args }} && cargo test --package ${{ matrix.package }} --doc
